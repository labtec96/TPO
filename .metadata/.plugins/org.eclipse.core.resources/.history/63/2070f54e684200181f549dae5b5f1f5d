package zad1;

import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.io.*;
import javax.swing.JLabel;

public class Klient extends Thread
{

	String adresIp;
	final int serverPort = 5000;
	String haslo;
	String kodKraju;
	int port;
	JLabel tlumaczenie;
	JLabel lblLanguage;
	public Klient(String haslo, String kodKraju, int port, JLabel tlumaczenie, JLabel lblLanguage)
	{
		this.tlumaczenie = tlumaczenie;
		this.haslo = haslo;
		this.kodKraju = kodKraju;
		this.port = port;
		this.lblLanguage = lblLanguage;
		try
		{
			adresIp = InetAddress.getLocalHost().getHostAddress();
		} catch (IOException ie)
		{
			System.out.println("Problem z pobraniem adresu IP");
		}
	}

	@Override
	public void run()
	{
		Socket clientSocket;
		try
		{
			clientSocket = new Socket(adresIp, serverPort);

			OutputStream sos = clientSocket.getOutputStream();
			OutputStreamWriter osw = new OutputStreamWriter(sos);
			BufferedWriter bw = new BufferedWriter(osw);
			InputStream sis = clientSocket.getInputStream();
			InputStreamReader isr = new InputStreamReader(sis);
			BufferedReader br = new BufferedReader(isr);
			bw.write(haslo);
			bw.newLine();
			bw.flush();
			bw.write(kodKraju);
			bw.newLine();
			bw.flush();
			bw.write(Integer.toString(port));
			bw.newLine();
			bw.flush();
			clientSocket.close();
			ServerSocket welcomeSocket = new ServerSocket(port);
			while (true)
			{
				Socket clientSocketGetRequest = welcomeSocket.accept();
				sis = clientSocketGetRequest.getInputStream();
				isr = new InputStreamReader(sis);
				br = new BufferedReader(isr);
				System.out.println("Polaczylem sie z serwerem czekam na odpowiedz ");
				String serverString = br.readLine();
				if (serverString == "Zly kod jezyka")
				{
					
				}
				else if (serverString == "PrzesylamJezyki")
				{
					serverString = br.readLine();
					System.out.println(serverString);
					clientSocketGetRequest.close();
					break;
				} 
				else
				{
					System.out.println("Otrzymalem odpowiedz " + serverString);
					tlumaczenie.setText(serverString);
					clientSocketGetRequest.close();
					break;
				}
			}
			welcomeSocket.close();
		} catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
